#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define PASSWORD_LENGTH 12

/**
 * generate_password - Generates a random valid password for 101-crackme
 *
 * Return: A dynamically allocated string containing the password
 */
char *generate_password(void)
{
    char *password = malloc((PASSWORD_LENGTH + 1) * sizeof(char));
    if (password == NULL) {
        perror("malloc");
        exit(EXIT_FAILURE);
    }

    // Characters allowed in the password
    const char charset[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

    srand(time(NULL));

    for (int i = 0; i < PASSWORD_LENGTH; i++) {
        int index = rand() % (sizeof(charset) - 1);
        password[i] = charset[index];
    }

    password[PASSWORD_LENGTH] = '\0';  // Null-terminate the string
    return password;
}

int main(void)
{
    char *password = generate_password();

    printf("%s\n", password);

    free(password);  // Don't forget to free the allocated memory

    return 0;
}

